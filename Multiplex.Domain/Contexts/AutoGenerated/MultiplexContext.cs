using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Multiplex.Domain.Models;

// Code scaffolded by EF Core assumes nullable reference types (NRTs) are not used or disabled.
// If you have enabled NRTs for your project, then un-comment the following line:
// #nullable disable

namespace Multiplex.Domain.Contexts.AutoGenerated
{
    public partial class MultiplexContext : DbContext
    {
        public MultiplexContext()
        {
        }

        public MultiplexContext(DbContextOptions<MultiplexContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Canales> Canales { get; set; }
        public virtual DbSet<CapituloSerie> CapituloSerie { get; set; }
        public virtual DbSet<EstadosCuentas> EstadosCuentas { get; set; }
        public virtual DbSet<FavoritosPelicula> FavoritosPelicula { get; set; }
        public virtual DbSet<FavoritosSeries> FavoritosSeries { get; set; }
        public virtual DbSet<Generos> Generos { get; set; }
        public virtual DbSet<HistorialPelicula> HistorialPelicula { get; set; }
        public virtual DbSet<HistorialSerie> HistorialSerie { get; set; }
        public virtual DbSet<Peliculas> Peliculas { get; set; }
        public virtual DbSet<Relation88> Relation88 { get; set; }
        public virtual DbSet<Relation89> Relation89 { get; set; }
        public virtual DbSet<Series> Series { get; set; }
        public virtual DbSet<TiposCuentas> TiposCuentas { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Name=default");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Canales>(entity =>
            {
                entity.HasKey(e => e.IdCn)
                    .HasName("PK__CANALES__8B622F9958E25C41");

                entity.ToTable("CANALES");

                entity.HasIndex(e => e.IdCn)
                    .HasName("CANALES_PK")
                    .IsUnique();

                entity.Property(e => e.IdCn)
                    .HasColumnName("ID_CN")
                    .ValueGeneratedNever();

                entity.Property(e => e.NombreCn)
                    .IsRequired()
                    .HasColumnName("NOMBRE_CN")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CapituloSerie>(entity =>
            {
                entity.HasKey(e => new { e.IdSr, e.IdCp })
                    .HasName("PK__CAPITULO__23D58B78856DFE66");

                entity.ToTable("CAPITULO_SERIE");

                entity.HasIndex(e => e.IdSr)
                    .HasName("RELATION_91_FK");

                entity.HasIndex(e => new { e.IdSr, e.IdCp })
                    .HasName("CAPITULO_SERIE_PK")
                    .IsUnique();

                entity.Property(e => e.IdSr).HasColumnName("ID_SR");

                entity.Property(e => e.IdCp).HasColumnName("ID_CP");

                entity.Property(e => e.DescripcionCp)
                    .HasColumnName("DESCRIPCION_CP")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DuracionCp)
                    .HasColumnName("DURACION_CP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NombreCp)
                    .IsRequired()
                    .HasColumnName("NOMBRE_CP")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdSrNavigation)
                    .WithMany(p => p.CapituloSerie)
                    .HasForeignKey(d => d.IdSr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__CAPITULO___ID_SR__3B75D760");
            });

            modelBuilder.Entity<EstadosCuentas>(entity =>
            {
                entity.HasKey(e => e.IdEc)
                    .HasName("PK__ESTADOS___8B62DF4346BE263C");

                entity.ToTable("ESTADOS_CUENTAS");

                entity.HasIndex(e => e.IdEc)
                    .HasName("ESTADOS_CUENTAS_PK")
                    .IsUnique();

                entity.Property(e => e.IdEc)
                    .HasColumnName("ID_EC")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescripcionEc)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION_EC")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FavoritosPelicula>(entity =>
            {
                entity.HasKey(e => e.IdFavpel)
                    .HasName("PK__FAVORITO__C436A5861D6C8C69");

                entity.ToTable("FAVORITOS_PELICULA");

                entity.HasIndex(e => e.IdFavpel)
                    .HasName("FAVORITOS_PELICULA_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdPl)
                    .HasName("RELATION_96_FK");

                entity.HasIndex(e => e.IdUsr)
                    .HasName("RELATION_148_FK");

                entity.Property(e => e.IdFavpel)
                    .HasColumnName("ID_FAVPEL")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdPl).HasColumnName("ID_PL");

                entity.Property(e => e.IdUsr).HasColumnName("ID_USR");

                entity.HasOne(d => d.IdPlNavigation)
                    .WithMany(p => p.FavoritosPelicula)
                    .HasForeignKey(d => d.IdPl)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FAVORITOS__ID_PL__33D4B598");

                entity.HasOne(d => d.IdUsrNavigation)
                    .WithMany(p => p.FavoritosPelicula)
                    .HasForeignKey(d => d.IdUsr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FAVORITOS__ID_US__34C8D9D1");
            });

            modelBuilder.Entity<FavoritosSeries>(entity =>
            {
                entity.HasKey(e => e.IdFavsr)
                    .HasName("PK__FAVORITO__6C7FEF91AEA026D4");

                entity.ToTable("FAVORITOS_SERIES");

                entity.HasIndex(e => e.IdFavsr)
                    .HasName("FAVORITOS_SERIES_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdSr)
                    .HasName("RELATION_97_FK");

                entity.HasIndex(e => e.IdUsr)
                    .HasName("RELATION_150_FK");

                entity.Property(e => e.IdFavsr)
                    .HasColumnName("ID_FAVSR")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdSr).HasColumnName("ID_SR");

                entity.Property(e => e.IdUsr).HasColumnName("ID_USR");

                entity.HasOne(d => d.IdSrNavigation)
                    .WithMany(p => p.FavoritosSeries)
                    .HasForeignKey(d => d.IdSr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FAVORITOS__ID_SR__37A5467C");

                entity.HasOne(d => d.IdUsrNavigation)
                    .WithMany(p => p.FavoritosSeries)
                    .HasForeignKey(d => d.IdUsr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FAVORITOS__ID_US__38996AB5");
            });

            modelBuilder.Entity<Generos>(entity =>
            {
                entity.HasKey(e => e.IdGn)
                    .HasName("PK__GENEROS__8B62CF0ABE810463");

                entity.ToTable("GENEROS");

                entity.HasIndex(e => e.IdGn)
                    .HasName("GENEROS_PK")
                    .IsUnique();

                entity.Property(e => e.IdGn)
                    .HasColumnName("ID_GN")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescripcionGn)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION_GN")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<HistorialPelicula>(entity =>
            {
                entity.HasKey(e => e.IdHp)
                    .HasName("PK__HISTORIA__8B62D7357631EE15");

                entity.ToTable("HISTORIAL_PELICULA");

                entity.HasIndex(e => e.IdHp)
                    .HasName("HISTORIAL_PELICULA_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdPl)
                    .HasName("RELATION_146_FK");

                entity.HasIndex(e => e.IdUsr)
                    .HasName("RELATION_149_FK");

                entity.Property(e => e.IdHp)
                    .HasColumnName("ID_HP")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdPl).HasColumnName("ID_PL");

                entity.Property(e => e.IdUsr).HasColumnName("ID_USR");

                entity.HasOne(d => d.IdPlNavigation)
                    .WithMany(p => p.HistorialPelicula)
                    .HasForeignKey(d => d.IdPl)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HISTORIAL__ID_PL__3E52440B");

                entity.HasOne(d => d.IdUsrNavigation)
                    .WithMany(p => p.HistorialPelicula)
                    .HasForeignKey(d => d.IdUsr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HISTORIAL__ID_US__3F466844");
            });

            modelBuilder.Entity<HistorialSerie>(entity =>
            {
                entity.HasKey(e => e.IdHs)
                    .HasName("PK__HISTORIA__8B62D73015A2EFA2");

                entity.ToTable("HISTORIAL_SERIE");

                entity.HasIndex(e => e.IdHs)
                    .HasName("HISTORIAL_SERIE_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdSr)
                    .HasName("RELATION_147_FK");

                entity.HasIndex(e => e.IdUsr)
                    .HasName("RELATION_151_FK");

                entity.Property(e => e.IdHs)
                    .HasColumnName("ID_HS")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdSr).HasColumnName("ID_SR");

                entity.Property(e => e.IdUsr).HasColumnName("ID_USR");

                entity.HasOne(d => d.IdSrNavigation)
                    .WithMany(p => p.HistorialSerie)
                    .HasForeignKey(d => d.IdSr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HISTORIAL__ID_SR__4222D4EF");

                entity.HasOne(d => d.IdUsrNavigation)
                    .WithMany(p => p.HistorialSerie)
                    .HasForeignKey(d => d.IdUsr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__HISTORIAL__ID_US__4316F928");
            });

            modelBuilder.Entity<Peliculas>(entity =>
            {
                entity.HasKey(e => e.IdPl)
                    .HasName("PK__PELICULA__8B63902F6ABAFFC1");

                entity.ToTable("PELICULAS");

                entity.HasIndex(e => e.IdPl)
                    .HasName("PELICULAS_PK")
                    .IsUnique();

                entity.Property(e => e.IdPl)
                    .HasColumnName("ID_PL")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescripcionPl)
                    .HasColumnName("DESCRIPCION_PL")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.DuracionPl)
                    .HasColumnName("DURACION_PL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ElencoPl)
                    .HasColumnName("ELENCO_PL")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TituloPl)
                    .IsRequired()
                    .HasColumnName("TITULO_PL")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Relation88>(entity =>
            {
                entity.HasKey(e => new { e.IdGn, e.IdPl })
                    .HasName("PK__RELATION__63D4F60820A75743");

                entity.ToTable("RELATION_88");

                entity.HasIndex(e => e.IdGn)
                    .HasName("RELATION_88_FK2");

                entity.HasIndex(e => e.IdPl)
                    .HasName("RELATION_88_FK");

                entity.HasIndex(e => new { e.IdGn, e.IdPl })
                    .HasName("RELATION_88_PK")
                    .IsUnique();

                entity.Property(e => e.IdGn).HasColumnName("ID_GN");

                entity.Property(e => e.IdPl).HasColumnName("ID_PL");

                entity.HasOne(d => d.IdGnNavigation)
                    .WithMany(p => p.Relation88)
                    .HasForeignKey(d => d.IdGn)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RELATION___ID_GN__45F365D3");

                entity.HasOne(d => d.IdPlNavigation)
                    .WithMany(p => p.Relation88)
                    .HasForeignKey(d => d.IdPl)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RELATION___ID_PL__46E78A0C");
            });

            modelBuilder.Entity<Relation89>(entity =>
            {
                entity.HasKey(e => new { e.IdGn, e.IdSr })
                    .HasName("PK__RELATION__83D4F5923522E93B");

                entity.ToTable("RELATION_89");

                entity.HasIndex(e => e.IdGn)
                    .HasName("RELATION_89_FK2");

                entity.HasIndex(e => e.IdSr)
                    .HasName("RELATION_89_FK");

                entity.HasIndex(e => new { e.IdGn, e.IdSr })
                    .HasName("RELATION_89_PK")
                    .IsUnique();

                entity.Property(e => e.IdGn).HasColumnName("ID_GN");

                entity.Property(e => e.IdSr).HasColumnName("ID_SR");

                entity.HasOne(d => d.IdGnNavigation)
                    .WithMany(p => p.Relation89)
                    .HasForeignKey(d => d.IdGn)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RELATION___ID_GN__49C3F6B7");

                entity.HasOne(d => d.IdSrNavigation)
                    .WithMany(p => p.Relation89)
                    .HasForeignKey(d => d.IdSr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RELATION___ID_SR__4AB81AF0");
            });

            modelBuilder.Entity<Series>(entity =>
            {
                entity.HasKey(e => e.IdSr)
                    .HasName("PK__SERIES__8B63A98172EE77E9");

                entity.ToTable("SERIES");

                entity.HasIndex(e => e.IdSr)
                    .HasName("SERIES_PK")
                    .IsUnique();

                entity.Property(e => e.IdSr)
                    .HasColumnName("ID_SR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CantCapitulosSr).HasColumnName("CANT_CAPITULOS_SR");

                entity.Property(e => e.DescripcionSr)
                    .HasColumnName("DESCRIPCION_SR")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.NombreSr)
                    .IsRequired()
                    .HasColumnName("NOMBRE_SR")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TiposCuentas>(entity =>
            {
                entity.HasKey(e => e.IdTc)
                    .HasName("PK__TIPOS_CU__8B63B1B13B42BBDB");

                entity.ToTable("TIPOS_CUENTAS");

                entity.HasIndex(e => e.IdTc)
                    .HasName("TIPOS_CUENTAS_PK")
                    .IsUnique();

                entity.Property(e => e.IdTc)
                    .HasColumnName("ID_TC")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescripcionTc)
                    .IsRequired()
                    .HasColumnName("DESCRIPCION_TC")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Usuarios>(entity =>
            {
                entity.HasKey(e => e.IdUsr)
                    .HasName("PK__USUARIOS__2A8C692AF4F581A9");

                entity.ToTable("USUARIOS");

                entity.HasIndex(e => e.IdEc)
                    .HasName("RELATION_31_FK");

                entity.HasIndex(e => e.IdTc)
                    .HasName("RELATION_23_FK");

                entity.HasIndex(e => e.IdUsr)
                    .HasName("USUARIOS_PK")
                    .IsUnique();

                entity.Property(e => e.IdUsr)
                    .HasColumnName("ID_USR")
                    .ValueGeneratedNever();

                entity.Property(e => e.ApellidoUsr)
                    .IsRequired()
                    .HasColumnName("APELLIDO_USR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CorreoUsr)
                    .IsRequired()
                    .HasColumnName("CORREO_USR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IdEc).HasColumnName("ID_EC");

                entity.Property(e => e.IdTc).HasColumnName("ID_TC");

                entity.Property(e => e.NombreUsr)
                    .IsRequired()
                    .HasColumnName("NOMBRE_USR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordUsr)
                    .IsRequired()
                    .HasColumnName("PASSWORD_USR")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdEcNavigation)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.IdEc)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USUARIOS__ID_EC__30F848ED");

                entity.HasOne(d => d.IdTcNavigation)
                    .WithMany(p => p.Usuarios)
                    .HasForeignKey(d => d.IdTc)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__USUARIOS__ID_TC__300424B4");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
